---
# Tasks for get_provider_host_keys
- name: "Get passwordstore work folder"
  set_fact:
    my_passwordstore_folder: "{{ lookup('env', 'PASSWORD_STORE_DIR') | default('~/.password-store') }}"

- name: "TODO REMOVE: Debug my_passwordstore"
  debug:
    msg: "my_passwordstore_folder: {{ my_passwordstore_folder }}"

- name: "Set the pass URL"
  set_fact:
    pass_l3_route: "{{ pass_l1 + '/' + pass_l2 + '/' + pass_l3  }}"
    pass_l3_name: "{{ pass_l1 + '_' + pass_l2 + '_' + pass_l3  }}"

- name: "Check if the folder exists"
  stat:
    path: "{{ my_passwordstore_folder + '/' + pass_l3_route }}"
  register: stat_result

- name: "TODO REMOVE: Debug pass_db_name"
  debug:
    msg: "stat_result: {{ stat_result }}"

- name: "Create vm folder if it doesn't exist"
  file:
    path: "{{ my_passwordstore_folder + '/' + pass_l3_route }}"
    state: directory

- name: "Generate pass structure if it doesn't exist"
  include_tasks: "generate_pass_structure.yml"
  vars:
    username: "{{ vm_user | default('snowdrop') }}"
    custom_ssh_port_number: "{{ vm_custom_ssh_port | default('47286') }}"
#  when: "not stat_result.stat.exists or (override_create_pass is defined and override_create_pass | bool)"

#- name: "Set facts from pass"
#  set_fact:
#    pass_username: "{{ lookup('passwordstore', pass_l3_route + '/username')}}"
#    pass_ssh_port: "{{ lookup('passwordstore', pass_l3_route + '/ssh_port')}}"

- name: Call generate_inventory role
  include_role:
    name: generate_inventory
  vars:
    type: "{{ pass_l2 }}"
    vm_name: "{{ pass_l3 }}"
    os_user: "{{ pass_os_user }}"
    new_ssh_port_number: "{{ pass_ssh_port }}"
    override_ssh_private_key_file: "~/.ssh/id_rsa_{{ pass_l3_name }}"
...