---
- set_fact:
    pass_os_password_tmp: "{{  (' userpaserpass=' + os_password) if os_password is defined else (' length=16') }}"

- name: "Set pass facts (user, pw, ssh_port)"
  set_fact:
    # ansible_user
    pass_os_user: "{{ query('passwordstore', pass_l3_route + '/os_user create=True userpass=' + username)[0] }}"
    pass_os_password: "{{ query('passwordstore', pass_l3_route + '/os_password create=True ' + pass_os_password_tmp )[0] }}"
    # new_ssh_port_number, ansible_ssh_port
    pass_ssh_port: "{{ query('passwordstore', pass_l3_route + '/ssh_port create=True userpass=' + custom_ssh_port_number)[0] }}"
    ansible_ssh_port: "{{ query('passwordstore', pass_l3_route + '/ansible_ssh_port create=True userpass=22')[0] }}"
#    pass_rsa_private_key: "{{ lookup('passwordstore', pass_l3_route + '/id_rsa returnall=true', errors='ignore') | default('') }}"
#    pass_rsa_public_key: "{{ lookup('passwordstore', pass_l3_route + '/id_rsa.pub returnall=true', errors='ignore') | default('') }}"
  ignore_errors: true
  failed_when: false
  register: res_set_fact

- name: "Set pass facts ssh keys"
  set_fact:
    pass_rsa_private_key: "{{ lookup('passwordstore', pass_l3_route + '/id_rsa returnall=true', errors='warn') | default('') }}"
    pass_rsa_public_key: "{{ lookup('passwordstore', pass_l3_route + '/id_rsa.pub returnall=true', errors='warn') | default('') }}"
  ignore_errors: true
  failed_when: false
  register: res_set_ssh_key_fact

#- name: "Create RSA private key from pass - Private key found in pass"
#  copy:
#    dest: "{{ '~/.ssh/id_rsa_'+ pass_l3_name }}"
#    content: "{{ pass_rsa_private_key }}"
#  when: "pass_rsa_private_key is defined and pass_rsa_private_key | length > 0"

- name: "Generate new RSA private key"
  openssl_privatekey:
    path: "{{ '~/.ssh/id_rsa_'+ pass_l3_name }}"
  when: "(pass_rsa_private_key is not defined or pass_rsa_private_key | length == 0)"
  register: rsa_pk_gen_res

- name: "Gather RSA PK contents"
  set_fact:
    pass_rsa_private_key: "{{ query('file', '~/.ssh/id_rsa_'+ pass_l3_name) }}"
  when: "(pass_rsa_private_key is not defined or pass_rsa_private_key | length == 0)"

#- name: "Change RSA private key permission"
#  file:
#    path: "~/.ssh/id_rsa_{{ pass_l3_name }}"
#    mode: "0600"

- name: "Add the contents of the private key to pass"
  shell: "cat ~/.ssh/id_rsa_{{ pass_l3_name }} | pass insert -m {{ pass_l3_route}}/id_rsa "
  when: "(res_set_ssh_key_fact.ansible_facts.pass_rsa_private_key is not defined or res_set_ssh_key_fact.ansible_facts.pass_rsa_private_key | length == 0)"

#- name: "Create RSA public key from pass - Public key found in pass"
#  copy:
#    dest: "{{ '~/.ssh/id_rsa_'+ pass_l3_name + '.pub'}}"
#    content: "{{ pass_rsa_public_key }}"
#  when: "pass_rsa_public_key is defined and pass_rsa_public_key | length > 0"

- name: "Generate an OpenSSL public key from the private key, if the RSA key was generated."
  openssl_publickey:
    path: "~/.ssh/id_rsa_{{ pass_l3_name }}.pub"
    privatekey_path: "~/.ssh/id_rsa_{{ pass_l3_name }}"
    format: "OpenSSH"
  when: "rsa_pk_gen_res is defined and rsa_pk_gen_res.changed"

- name: "Add the contents of the public key to pass"
  shell: "cat ~/.ssh/id_rsa_{{ pass_l3_name }}.pub | pass insert -m {{ pass_l3_route }}/id_rsa.pub "
  when: "(res_set_ssh_key_fact.ansible_facts.pass_rsa_public_key is not defined or res_set_ssh_key_fact.ansible_facts.pass_rsa_public_key | length == 0)"

#- name: "Change RSA public key permission"
#  file:
#    path: "~/.ssh/id_rsa_{{ pass_l3_name }}.pub"
#    mode: "0600"

...