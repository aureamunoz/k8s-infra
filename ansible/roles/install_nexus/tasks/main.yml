- set_fact:
    infra_project: "{{ infra_project | default('infra') }}"


- name: Create project
  command: oc {{ openshift_env.oc_admin_kubeconfig_arg }} new-project {{ infra_project }}
  ignore_errors: true


- name: Install Nexus App
  shell: |
    oc {{ openshift_env.oc_admin_kubeconfig_arg }} new-app sonatype/nexus -n {{ infra_project }}
    oc {{ openshift_env.oc_admin_kubeconfig_arg }} expose svc/nexus -n {{ infra_project }}
    oc {{ openshift_env.oc_admin_kubeconfig_arg }} set probe dc/nexus -n {{ infra_project }} \
    	--liveness \
    	--failure-threshold 3 \
    	--initial-delay-seconds 30 \
    	-- echo ok
    oc {{ openshift_env.oc_admin_kubeconfig_arg }} set probe dc/nexus -n {{ infra_project }} \
    	--readiness \
    	--failure-threshold 3 \
    	--initial-delay-seconds 30 \
    	--get-url=http://:8081/nexus/content/groups/public

- block:

  - set_fact:
      claim_name: nexus-pv

  - name: Remove existing claim
    command: oc {{ openshift_env.oc_admin_kubeconfig_arg }} delete pvc {{ claim_name }} -n {{ infra_project }} --ignore-not-found=true

  - name: Enable persistence
    shell: |
        oc {{ openshift_env.oc_admin_kubeconfig_arg }} set volume dc/nexus -n {{ infra_project }} --add \
            --name 'nexus-volume-1' \
            --type 'pvc' \
            --mount-path '/sonatype-work/' \
            --claim-name '{{ claim_name }}' \
            --claim-size '5G' \
            --overwrite

  when: persistence

- name: Get Nexus Route
  shell: oc {{ openshift_env.oc_admin_kubeconfig_arg }} get route nexus -n {{ infra_project }} -o jsonpath='http://{.spec.host}/nexus'
  register: nexus_address

- name: Wait till Nexus is Up
  uri:
    url: "{{ nexus_address.stdout }}/content/repositories/central/archetype-catalog.xml"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 20
  delay: 30

- name: Create JBoss Repos
  uri:
    url: "{{ nexus_address.stdout }}/{{ item.value.path }}"
    method: POST
    return_content: no
    status_code: 201
    user: "admin"
    password: "admin123"
    body: "{{ lookup('file', role_path ~ '/files/' ~ item.value.file) }}"
    body_format: json
  with_dict: "{{ repos }}"
  ignore_errors: true

- name: Create Groups for the Nexus repos
  uri:
    url: "{{ nexus_address.stdout }}/{{ item.value.path }}"
    method: POST
    return_content: no
    status_code: 201
    user: "admin"
    password: "admin123"
    body: "{{ lookup('file', role_path ~ '/files/' ~ item.value.file) }}"
    body_format: json
  with_dict: "{{ group_repos }}"
  ignore_errors: true
