- include_tasks: docker.yml
  when: install_docker | bool

- name: Add kubernetes repository
  yum_repository:
    name: kubernetes
    description: Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: true
    repo_gpgcheck: true
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: kube*

- name: Install Kubernetes packages - {{ k8s_version }}
  yum:
    name: "{{ packages }}"
    state: present
    disable_excludes: kubernetes
  vars:
    packages:
      - kubeadm-{{ k8s_version }}
      - kubectl-{{ k8s_version }}
      - kubelet-{{ k8s_version }}

- name: Disable selinux
  shell: |
    setenforce 0
    sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config
    getenforce

- name: Start kubelet
  systemd:
    state: started
    name: kubelet
    enabled: yes

- name: Create k8s conf file
  template:
    src: "k8s.conf.j2"
    dest: /etc/sysctl.d/k8s.conf

- name: Make k8s conf file take effect
  command: "sysctl --system"

- name: Pull k8s linux images for version {{ k8s_version }}
  command: kubeadm config images pull --kubernetes-version {{ k8s_version }}

- name: Initialize cluster for k8s - {{ k8s_version }}
  command: "kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ public_ip_address }} --kubernetes-version {{ k8s_version }}"

- name: Install Flannel Virtual Network for pod communication
  shell: |
    kubectl -n kube-system get deployment coredns -o yaml | sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' | kubectl apply -f -
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml

- name: Taint the node
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"

- name: Generate ClusterRole file for the sa default and namespace kube-system
  template:
    src: "clusterrole-admin.j2"
    dest: /tmp/clusterrole-admin.yml

- name: Grant Cluster Admin role to the serviceaccount default of kube-system
  shell: |
    kubectl apply -f /tmp/clusterrole-admin.yml

- name: Create persistence volume
  include_tasks: create_single_pv.yml
  vars:
    volume_name: "pv{{ item }}"
  with_sequence: start=1 count=5 format=%03d

- name: Create user's k8s config file
  shell: |
    mkdir -p .kube
    sudo cp /etc/kubernetes/admin.conf .kube/config
    sudo chown centos:centos -R .kube/
    chmod 644 .kube/config

- name: save_config.yml
  include_role:
    name: k8s_config

