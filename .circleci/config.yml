version: 2.1

jobs:

  kind:
    #docker:
    #  - image: quay.io/snowdrop/centos-circleci:latest
    machine: true
    environment:
      CLUSTER_NAME: circleci
      GO_VERSION: 1.12.7
      GOPATH: /go
      PATH: $GOPATH/bin:/usr/local/go/bin:$PATH
      KIND_VERSION: v0.4.0

    steps:
      # - checkout
      # - setup_remote_docker
      # - run:
      #     name: Install Go
      #     command: |
      #       wget https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz && \
      #           tar -C /usr/local -xzf go$GO_VERSION.linux-amd64.tar.gz
      #       mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
      - run:
          name: Install k8s
          command: |
            # GO111MODULE="on" go get sigs.k8s.io/kind@v0.4.0

            BIN_DIR="$(mktemp -d)"
            export KIND="${BIN_DIR}/kind"

            KIND_BINARY_URL="https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64"
            wget -O "${KIND}" "${KIND_BINARY_URL}"
            chmod +x "${KIND}"
      - run:
          name: Create Kind cluster
          command: |
            ${KIND} create cluster --image=kindest/node:v1.14.3 --name $CLUSTER_NAME --loglevel=debug
      - run:
          name: Setup kubeconfig file
          command: |
            ${KIND} get kubeconfig-path --name=$CLUSTER_NAME
            mkdir -p $HOME/.kube
            cp -i $(${KIND} get kubeconfig-path --name=$CLUSTER_NAME) $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config
            cat /home/circleci/.kube/kind-config-$CLUSTER_NAME
      - run:
          name: Check cluster-info
          command: |
            kubectl cluster-info dump

  centos:
    docker:
      - image: quay.io/snowdrop/centos-circleci:latest

    environment:
      ANSIBLE_BIN_DIR=/home/circleci/.local/bin

    steps:
      - checkout

      - run:
          name: Install k8s
          command: |
            PB_DIR=sandbox/k8s
            ansible-playbook $PB_DIR/main.yml -i $PB_DIR/circle_hosts \
                --limit circleci \
                -c local \
                --tags k8s_cluster \
                --become  \
                -e install_docker=false

  ubuntu:
    docker:
      - image: circleci/golang:latest

    environment:
      ANSIBLE_BIN_DIR=/home/circleci/.local/bin

    steps:
      - checkout

      - run:
          name: Install Ansible using pip3
          command: |
            sudo apt install -yqq python3-pip tree
            pip3 install ansible

      - run:
          name: Install k8s
          command: |
            PB_DIR=sandbox/k8s
            $ANSIBLE_BIN_DIR/ansible-playbook $PB_DIR/main.yml -i $PB_DIR/circle_hosts --limit circleci -c local --tags k8s_cluster --become

workflows:
  version: 2
  k8s-centos:
    jobs:
      - kind
      # - centos
      # k8s-ubuntu:
      #   jobs:
      #     - ubuntu

